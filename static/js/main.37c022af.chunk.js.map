{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/findMovie.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","findMovie","a","fetch","response","json","FindMovie","onAddMovie","useState","query","setQuery","setMovie","error","setError","onFindMovie","newMovie","Response","normalizeMovie","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","App","state","data","addMovie","some","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37c022af.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const key = '9d0d08ca';\nconst OMDb_API = 'https://www.omdbapi.com'; // eslint-disable-line\n\nexport const findMovie = async(title) => {\n  const response = await fetch(`${OMDb_API}/?apikey=${key}&t=${title}`); // eslint-disable-line\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { findMovie } from '../../api/findMovie';\n\nexport const FindMovie = ({ onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n\n  const onFindMovie = async() => {\n    const newMovie = await findMovie(query);\n\n    if (newMovie.Response === 'False') {\n      setError(true);\n    }\n\n    const normalizeMovie = {\n      title: newMovie.Title,\n      description: newMovie.Plot,\n      imgUrl: newMovie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n      imdbId: newMovie.imdbID,\n    };\n\n    setMovie(normalizeMovie);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                onAddMovie(movie);\n                setQuery('');\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {\n        movie && movie.title && !error\n        && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n        )\n      }\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAddMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport './App.scss';\n\nimport data from './api/movies.json';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (newMovie) => {\n    if (!newMovie) {\n      return;\n    }\n\n    if (!newMovie.imdbId) {\n      return;\n    }\n\n    if (this.state.movies.some(({ imdbId }) => imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    this.setState(state => ({\n      movies: [...state.movies, newMovie],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAddMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}